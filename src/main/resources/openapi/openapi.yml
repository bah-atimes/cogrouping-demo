# https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md
openapi: 3.0.1
info:
   version: 0.0.1-SNAPSHOT
   title: BIP Person Processor Service v1 API Documentation
   description: An OpenAPI 3.0 specification for Person Processor Service. Documentation is generated using OpenAPI Specification version 3.0.
   termsOfService: https://developer.va.gov/terms-of-service
   license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
tags:
  - name: Person
    description: Person Processor Resource
  - name: token-resource
    description: Token Resource
paths:
  # The token path should not require any changes
  "/api/v1/token":
    post:
      tags:
      - token-resource
      summary: Get JWT Token
      description: Get a JWT bearer token with 'person' data. Include MVI correlationIds
        if required by the target API.
      operationId: getTokenUsingPOST
      requestBody:
        description: |-
          'Identity information for the authenticated user. CorrelationIds may be null or an empty array if the target API does not require it.
          Otherwise, correlationIds must be the list as retrieved from MVI:
          <table style=\"table-layout:auto;width:700px;text-align:left;background-color:#efefef;\"><tr><th>Common ID Name</th><th>Example ID</th><th>Type</th><th>Source</th>
          <th>Issuer</th><th>Status</th><th </tr><tr><td>Participant ID (PID)</td><td>12345678</td><td>PI</td><td>200CORP</td><td>USVBA</td><td>A</td></tr>
          <tr><td>File Number</td><td>123456789</td><td>PI</td><td>200BRLS</td><td>USVBA</td><td>A</td></tr>
          <tr><td>ICN</td><td>1234567890V123456</td><td>NI</td><td>200M</td><td>USVHA</td><td>A</td></tr><tr><td>EDIPI / PNID</td><td>1234567890</td><td>NI</td><td>200DOD</td><td>USDOD</td><td>A</td></tr>
          <tr><td>SSN</td><td>123456789</td><td>SS</td><td></td><td></td><td></td></tr></table>'
        required: true
        content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Person'
      responses:
        '200':
          description: A Response which indicates a successful Request.  The Response
            may contain "messages" that could describe warnings or further information.
          content:
            text/plain:
              schema:
                type: string
        '400':
           '$ref': '#/components/responses/400'
        '401':
           '$ref': '#/components/responses/401'
        '403':
           '$ref': '#/components/responses/403'
        '500':
           '$ref': '#/components/responses/500'
      deprecated: false
components:
  # securitySchemes are defined by the framework.
  # Service applications must configure as below.
  securitySchemes:
    Authorization:
      type: apiKey
      name: Authorization
      in: header
    bearerAuth:
      type: http
      bearerFormat: JWT
      scheme: bearer
  schemas:
    # Define API (provider) model objects. Use type, format and example;
    # use standard JSR303 constraints (required, min, max, etc) where it makes sense

    #PERSONS
    PersonsOAPI:
      title: Persons
      description: Model for list of persons returned from BGS
      type: object
      properties:
        personList:
          '$ref': '#/components/schemas/PersonListOAPI'
        operationStatus:
          '$ref': '#/components/schemas/OperationStatusOAPI'
    PersonListOAPI:
      type: array
      items:
        '$ref': '#/components/schemas/PersonOAPI'
    PersonOAPI:
      type: object
      properties:
        allowPoaAccess:
          type: string
        awardSoj:
          type: string
        city:
          type: string
        country:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        dateOfDeath:
          type: string
          format: date-time
        fileNumber:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        personId:
          type: integer
          format: int64
        poaCode:
          type: string
        securityLevel:
          type: string
        sensitivityReasonTypeName:
          type: string
        soj:
          type: string
        ssn:
          type: string
        state:
          type: string
        syncId:
          type: integer
          format: int64
        terminalDigit:
          type: string
        veteranIndicator:
          type: string
        zipCode:
          type: string
    OperationStatusOAPI:
      type: object
      description: Object that describes the operation's status
      exclusiveMinimum: false
      properties:
        operationStatusCodeOAPI:
          '$ref': '#/components/schemas/OperationStatusCodeOAPI'
        operationStatusMessage:
          type: string
        failedItems:
          type: array
          items:
            '$ref': '#/components/schemas/ItemStatusOAPI'
    OperationStatusCodeOAPI:
      type: string
      enum: [success, failure]
    ItemStatusOAPI:
      type: object
      description: Object that describes a failed item's status
      properties:
        id:
          type: integer
          format: int64
        statusCode:
          '$ref': '#/components/schemas/ItemStatusCodeOAPI'
        statusMessage:
          type: string
    ItemStatusCodeOAPI:
      type: string
      enum: [PERSON_OR_CLAIM_NOT_FOUND, ERROR]

    #DIAGNOSTIC RATINGS
    BgsDiagnosticRatingsResponse:
      title: DiagnosticRatingsResponse
      description: returns a list of diagnostic ratings
      allOf:
        - '$ref': '#/components/schemas/ProviderResponse'
        - type: object
          properties:
            diagnosticRatings:
              '$ref': '#/components/schemas/DiagnosticRatingsOAPI'

    DiagnosticRatingsOAPI:
      title: DiagnosticRatings
      description: Model for list of c returned from BGS
      type: object
      properties:
        diagnosticRatingsList:
          '$ref': '#/components/schemas/DiagnosticRatingsListOAPI'
        operationStatus:
          '$ref': '#/components/schemas/OperationStatusOAPI'

    DiagnosticRatingsListOAPI:
      type: array
      items:
        '$ref': '#/components/schemas/DiagnosticRatingOAPI'

    DiagnosticRatingOAPI:
      type: object
      properties:
        diagnosticTypeCode:
          type: string
        personId:
          type: integer
          format: int64


    #FLASHES
    BgsFlashesResponse:
      title: FlashesResponse
      description: returns a list of flashes
      allOf:
        - '$ref': '#/components/schemas/ProviderResponse'
        - type: object
          properties:
            flashes:
              '$ref': '#/components/schemas/FlashesOAPI'

    FlashesOAPI:
      title: Flashes
      description: Model for list of flashes returned from BGS
      type: object
      properties:
        flashesList:
          '$ref': '#/components/schemas/FlashesListOAPI'
        operationStatus:
          '$ref': '#/components/schemas/OperationStatusOAPI'

    FlashesListOAPI:
      type: array
      items:
        '$ref': '#/components/schemas/FlashOAPI'

    FlashOAPI:
      type: object
      properties:
        flashName:
          type: string
        personId:
          type: integer
          format: int64

    #MILITARY SERVICES
    BgsMilitaryServicesResponse:
      title: MilitaryServicesResponse
      description: returns a list of military services
      allOf:
        - '$ref': '#/components/schemas/ProviderResponse'
        - type: object
          properties:
            militaryServices:
              '$ref': '#/components/schemas/MilitaryServicesOAPI'

    MilitaryServicesOAPI:
      title: MilitaryServices
      description: Model for list of military services returned from BGS
      type: object
      properties:
        militaryServicesList:
          '$ref': '#/components/schemas/MilitaryServicesListOAPI'
        operationStatus:
          '$ref': '#/components/schemas/OperationStatusOAPI'

    MilitaryServicesListOAPI:
      type: array
      items:
        '$ref': '#/components/schemas/MilitaryServiceOAPI'

    MilitaryServiceOAPI:
      type: object
      properties:
        branchName:
          type: string
        enteredOnActiveDutyDate:
          type: string
          format: date-time
        otherBranchName:
          type: string
        personId:
          type: integer
          format: int64
        releasedFromActiveDutyDate:
          type: string
          format: date-time
        tourNumber:
          type: integer
          format: int32

    #Forbidden Sojs
    BgsForbiddenSojsResponse:
      title: ForbiddenSojsResponse
      description: returns a list of forbidden Sojs
      allOf:
        - '$ref': '#/components/schemas/ProviderResponse'
        - type: object
          properties:
            forbiddenSojs:
              '$ref': '#/components/schemas/ForbiddenSojsOAPI'

    ForbiddenSojsOAPI:
      title: ForbiddenSojs
      description: Model for list of forbidden sojs returned from BGS
      type: object
      properties:
        forbiddenSojsList:
          '$ref': '#/components/schemas/ForbiddenSojsListOAPI'
        operationStatus:
          '$ref': '#/components/schemas/OperationStatusOAPI'

    ForbiddenSojsListOAPI:
      type: array
      items:
        '$ref': '#/components/schemas/ForbiddenSojOAPI'

    ForbiddenSojOAPI:
      type: object
      properties:
        forbiddenSoj:
          type: string
        personId:
          type: integer
          format: int64


    AggregatedComponent:
      type: object

    #CompletePerson
    AggregatedPerson:
      allOf:
        - '$ref': '#/components/schemas/AggregatedComponent'
        - type: object
          properties:
            personId:
              type: integer
              format: int64
            diagnosticRatings:
              '$ref': '#/components/schemas/DiagnosticRatingsOAPI'
            flashes:
              '$ref': '#/components/schemas/FlashesOAPI'
            militaryService:
              '$ref': '#/components/schemas/MilitaryServicesOAPI'
            forbiddenSojs:
              '$ref': '#/components/schemas/ForbiddenSojsOAPI'
            person:
              '$ref': '#/components/schemas/PersonOAPI'

    # CLAIMS
    ClaimsOAPI:
      title: Claims
      description: Model for list of claims returned from BGS
      type: object
      properties:
        claimList:
          '$ref': '#/components/schemas/ClaimListOAPI'
        operationStatus:
          '$ref': '#/components/schemas/OperationStatusOAPI'
    ClaimListOAPI:
      type: array
      items:
        '$ref': '#/components/schemas/ClaimOAPI'
    ClaimOAPI:
      type: object
      properties:
        claimDate:
          type: string
          format: date-time
        claimId:
          type: integer
          format: int64
        claimLevelStatusCode:
          type: string
        claimLifeCycleStatusChangeDate:
          type: string
          format: date-time
        claimLifecycleStatusName:
          type: string
        claimPoaAccess:
          type: string
        claimPoaCode:
          type: string
        claimSoj:
          type: string
        claimTypeCode:
          type: string
        claimantPersonId:
          type: integer
          format: int64
        contentionsCount:
          type: integer
          format: int64
        epCode:
          type: string
        establishmentDate:
          type: string
          format: date-time
        intakeSite:
          type: string
        organizationName:
          type: string
        organizationSoj:
          type: string
        payeeCode:
          type: string
        preDischargeInd:
          type: string
        preDischargeTypeCode:
          type: string
        priority:
          type: string
        programTypeCode:
          type: string
        serviceTypeCode:
          type: string
        submitterApplicationCode:
          type: string
        submitterRoleCode:
          type: string
        suspenseDate:
          type: string
          format: date-time
        suspenseReasonCode:
          type: string
        suspenseReasonComments:
          type: string
        syncId:
          type: integer
          format: int64
        temporaryClaimSoj:
          type: string
        veteranPersonId:
          type: integer
          format: int64

    #SPECIAL ISSUES
    SpecialIssueResponse:
      title: SpecialIssueResponse
      description: returns a list of special issues
      allOf:
        - '$ref': '#/components/schemas/ProviderResponse'
        - type: object
          properties:
            specialIssues:
              '$ref': '#/components/schemas/SpecialIssuesOAPI'

    SpecialIssuesOAPI:
      title: SpecialIssues
      description: Model for list of special issues returned from BGS
      type: object
      properties:
        specialIssuesList:
          '$ref': '#/components/schemas/SpecialIssueListOAPI'
        operationStatus:
          '$ref': '#/components/schemas/OperationStatusOAPI'

    SpecialIssueListOAPI:
      type: array
      items:
        '$ref': '#/components/schemas/SpecialIssueOAPI'

    SpecialIssueOAPI:
      type: object
      properties:
        claimId:
          type: integer
          format: int64
        contentionId:
          type: integer
          format: int64
        specialIssueCode:
          type: string

    #TRACKED ITEMS
    TrackedItemResponse:
      title: TrackedItemResponse
      description: returns a list of special issues
      allOf:
        - '$ref': '#/components/schemas/ProviderResponse'
        - type: object
          properties:
            trackedItems:
              '$ref': '#/components/schemas/TrackedItemsOAPI'

    TrackedItemsOAPI:
      title: TrackedItems
      description: Model for list of tracked items returned from BGS
      type: object
      properties:
        trackedItemList:
          '$ref': '#/components/schemas/TrackedItemListOAPI'
        operationStatus:
          '$ref': '#/components/schemas/OperationStatusOAPI'

    TrackedItemListOAPI:
      type: array
      items:
        '$ref': '#/components/schemas/TrackedItemOAPI'

    TrackedItemOAPI:
      type: object
      properties:
        claimId:
          type: integer
          format: int64
        developmentActionCategoryCode:
          type: string
        lastestStatusCode:
          type: string
        latestStatusDate:
          type: string
          format: date-time
        requestDate:
          type: string
          format: date-time
        stdDvlpmtActionId:
          type: integer
          format: int64
        suspenseDate:
          type: string
          format: date-time
        trackedItemName:
          type: string

    #Unique Contention Classifications
    UniqueContentionClassificationResponse:
      title: UniqueContentionClassificationResponse
      description: returns a list of unique contention classifications
      allOf:
        - '$ref': '#/components/schemas/ProviderResponse'
        - type: object
          properties:
            uniqueContentionClassifications:
              '$ref': '#/components/schemas/UniqueContentionClassificationsOAPI'

    UniqueContentionClassificationsOAPI:
      title: UniqueContentionClassifications
      description: Model for list of unique contention classifications returned from BGS
      type: object
      properties:
        uniqueContentionClassificationList:
          '$ref': '#/components/schemas/UniqueContentionClassificationListOAPI'
        operationStatus:
          '$ref': '#/components/schemas/OperationStatusOAPI'

    UniqueContentionClassificationListOAPI:
      type: array
      items:
        '$ref': '#/components/schemas/UniqueContentionClassificationOAPI'

    UniqueContentionClassificationOAPI:
      type: object
      properties:
        claimId:
          type: integer
          format: int64
        contentionClassificationId:
          type: integer
          format: int64

    #CompleteClaim
    AggregatedClaim:
      allOf:
        - '$ref': '#/components/schemas/AggregatedComponent'
        - type: object
          properties:
            claimId:
              type: integer
              format: int64
            uniqueContentionClassifications:
              '$ref': '#/components/schemas/UniqueContentionClassificationsOAPI'
            trackedItems:
              '$ref': '#/components/schemas/TrackedItemsOAPI'
            specialIssues:
              '$ref': '#/components/schemas/SpecialIssuesOAPI'
            claim:
              '$ref': '#/components/schemas/ClaimOAPI'

    # Schema objects below are from BIP Framework to be declared.
    # These objects need to be mapped in <importMappings> section
    # of openapi-generator-maven-plugin so that no code is generated
    # for these classes
    Message:
      type: object
      title: Message
      description: Model that identifies a single message added to the repsonse. Property keys are enumerated in  the MessageKeys object.
      required:
      - key
      - severity
      properties:
        key:
          # possible values enumerated by gov.va.bip.framework.messages.MessageKeys
          type: string
        severity:
          # derived from gov.va.bip.framework.messages.MessageSeverity
          type: string
          enum:
            - INFO
            - WARN
            - ERROR
        status:
          type: integer
          format: int32
        text:
          type: string
        timestamp:
          type: string
          format: date-time
          example: yyyy-MM-dd'T'HH:mm:ss.SSS
    Person:
      type: object
      title: Person
      description: Model that identifies a single individual used in the security context
      properties:
        applicationID:
          type: string
          example: ShareUI
          description: The application taking the last action on the record
        appToken:
          type: string
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9
          description: The application's custom token passed as any String from consumers to the API services
        assuranceLevel:
          type: integer
          format: int32
          example: 2
          minimum: 0
          description: The person's access assurance level
        birthDate:
          type: string
          format: date
          example: '1978-05-20'
          description: The person's birth date
        correlationIds:
          type: array
          example:
          - 77779102^NI^200M^USVHA^P
          - 912444689^PI^200BRLS^USVBA^A
          - 6666345^PI^200CORP^USVBA^A
          - 1105051936^NI^200DOD^USDOD^A
          - 912444689^SS
          description: The MVI correlation IDs list for the person
          items:
            type: string
        email:
          type: string
          example: jane.doe@va.gov
          description: The person's email address
        firstName:
          type: string
          example: JANE
          description: The person's first name
        gender:
          type: string
          example: FEMALE
          description: The person's gender
        lastName:
          type: string
          example: DOE
          description: The person's last name
        middleName:
          type: string
          example: M
          description: The person's middle name
        prefix:
          type: string
          example: Ms
          description: The prefix for the person's full name
        stationID:
          type: string
          example: 310
          description: The number representing the Regional Office of the person taking the last action on the record
        suffix:
          type: string
          example: S
          description: The suffix for the person's full name
        userID:
          type: string
          example: vhaislXXXXX
          description: The name associated with the person taking the last action on the record
    ProviderResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            '$ref': '#/components/schemas/Message'
      title: ProviderResponse
    ProviderRequest:
      type: object
      title: ProviderRequest
  responses:
    400:
      description: There was an error encountered processing the Request.  Response
        will contain a  "messages" element that will provide further information
        on the error.  This request shouldn't be retried until corrected.
      content:
        application/problem+json:
          schema:
            '$ref': '#/components/schemas/ProviderResponse'
          example:
              messages:
                - key: bip.framework.global.validator.method.argument.not.valid
                  severity: ERROR
                  status: 400
                  text: Argument not valid.
                  timestamp: 2019-08-29T18:40:22.766Z
    401:
      description: The authentication mechanism failed and hence access is forbidden.
      content:
        application/problem+json:
          schema:
            '$ref': '#/components/schemas/ProviderResponse'
          example:
              messages:
                - key: UNAUTHORIZED
                  severity: ERROR
                  status: 401
                  text: No JWT Token in Header.
                  timestamp: 2019-08-29T18:40:22.766Z
    403:
      description: The request is not authorized.  Please verify credentials used
        in the request.
      content:
        application/problem+json:
          schema:
            '$ref': '#/components/schemas/ProviderResponse'
          example:
              messages:
                - key: bip.framework.not.authorized.exception
                  severity: ERROR
                  status: 403
                  text: Access denied.
                  timestamp: 2019-08-29T18:40:22.766Z
    500:
      description: There was an error encountered processing the Request.  Response
            will contain a  "messages" element that will provide further information
            on the error.  Please retry.  If problem persists, please contact support
            with a copy of the Response.
      content:
        application/problem+json:
          schema:
            '$ref': '#/components/schemas/ProviderResponse'
          example:
              messages:
                - key: bip.framework.global.general.exception
                  severity: ERROR
                  status: 500
                  text: Unexpected exception.
                  timestamp: 2019-08-29T18:40:22.766Z
